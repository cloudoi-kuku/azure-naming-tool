version: '3.8'

services:
  azurenamingtool:
    image: azure-naming-tool:latest
    container_name: azure-naming-tool
    ports:
      - "8080:80"
    volumes:
      # Persistent data storage for SQLite database
      - azure-naming-tool-data:/app/data
      # Persistent settings storage
      - azure-naming-tool-settings:/app/settings
      # Persistent repository storage (for JSON fallback)
      - azure-naming-tool-repository:/app/repository
    environment:
      # Database configuration
      - ConnectionStrings__DefaultConnection=Data Source=/app/data/azurenamingtool.db
      - StorageSettings__UseDatabase=true
      - StorageSettings__EnableMigration=true

      # Application configuration - Set to Development for debugging
      - ASPNETCORE_ENVIRONMENT=Development
      - DOTNET_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=80

      # Use HTTP only for simplicity
      - ASPNETCORE_URLS=http://+:80

      # Enhanced logging for debugging
      - Logging__LogLevel__Default=Debug
      - Logging__LogLevel__Microsoft.AspNetCore=Information
      - Logging__LogLevel__Microsoft.EntityFrameworkCore=Information
      - Logging__LogLevel__AzureNamingTool=Debug

      # Development settings
      - DevMode=true
      
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # CLI wrapper for command-line access
  naming-cli:
    image: curlimages/curl:latest
    container_name: azure-naming-cli
    depends_on:
      - azurenamingtool
    profiles:
      - cli
    entrypoint: |
      sh -c '
      echo "Azure Naming Tool CLI"
      echo "Usage: docker-compose run --rm naming-cli [environment] [location] [org] [project] [resource-type]"
      echo "Example: docker-compose run --rm naming-cli prod eastus contoso web vm"
      if [ $$# -eq 5 ]; then
        curl -s -X POST "http://azure-naming-tool/api/ResourceNamingRequests/RequestName" \
          -H "Content-Type: application/json" \
          -d "{
            \"ResourceEnvironment\": \"$$1\",
            \"ResourceLocation\": \"$$2\",
            \"ResourceOrg\": \"$$3\",
            \"ResourceProjAppSvc\": \"$$4\",
            \"ResourceType\": \"$$5\",
            \"CreatedBy\": \"cli\"
          }" | jq -r ".resourceName // .message"
      fi
      '
    networks:
      - default

volumes:
  azure-naming-tool-data:
    driver: local
  azure-naming-tool-settings:
    driver: local
  azure-naming-tool-repository:
    driver: local
